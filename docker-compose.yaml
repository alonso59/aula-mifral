# services:
#   ollama:
#     volumes:
#       - ollama:/root/.ollama
#     container_name: ollama
#     pull_policy: always
#     tty: true
#     restart: unless-stopped
#     image: ollama/ollama:${OLLAMA_DOCKER_TAG-latest}

#   open-webui:
#     build:
#       context: .
#       args:
#         OLLAMA_BASE_URL: '/ollama'
#       dockerfile: Dockerfile
#     image: open-webui-local:latest
#     container_name: open-webui
#     volumes:
#       - open-webui:/app/backend/data
#     depends_on:
#       - llm-runner
#     ports:
#       - ${OPEN_WEBUI_PORT-3000}:8080
#     environment:
#       - OPENAI_API_BASE_URL=http://model-runner.docker.internal/engines/llama.cpp/v1
#       - OPENAI_API_KEY=na
#       - WEBUI_NAME=MifralBot
#     extra_hosts:
#       - host.docker.internal:host-gateway
#     restart: unless-stopped

#   llm-runner:
#     provider:
#       type: model
#       options:
#         model: ai/smollm2:360M-Q4_K_M

# volumes:
#   ollama: {}
#   open-webui: {}

services:
  ollama:
    volumes:
      - ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    image: ollama/ollama:${OLLAMA_DOCKER_TAG-latest}

  open-webui:
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    image: open-webui-local:latest
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - ${OPEN_WEBUI_PORT-3000}:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped

volumes:
  ollama: {}
  open-webui: {}